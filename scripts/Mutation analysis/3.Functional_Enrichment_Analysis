###################GO functional enrichment###########################################################
library('maftools')
var.annovar.maf <- annovarToMaf(annovar = "/data/yuan/gastric_cancer/7.annote/annovar1/all_sample.maf",
                                refBuild = 'hg38',
                                tsbCol = 'Tumor_Sample_Barcode1',
                                table = 'refGene',
                                MAFobj = T)
laml = var.annovar.maf
unique(laml@data$Tumor_Sample_Barcode)
getSampleSummary(laml)
getGeneSummary(laml)
getFields(laml)

save(laml, file = 'input_merge.Rdata')

rm(list = ls())
require(maftools)
options(stringsAsFactors = F)
load(file = 'input_merge.Rdata')
project = 'merge'
##############################All genes
gene_summary <- getGeneSummary(laml)
write.table(gene_summary, file = "/data/yuan/gastric_cancer/9.enrich/gene_list.txt", quote = FALSE, row.names = FALSE, col.names = FALSE)

############After saving, transfer to local R running, the server cannot install the relevant installation package
if (!requireNamespace("BiocManager", quietly = TRUE))
    install.packages("BiocManager")

BiocManager::install(c("clusterProfiler", "org.Hs.eg.db", "enrichplot"))

library(clusterProfiler)
library(org.Hs.eg.db)   # Human Gene Annotation Database
library(enrichplot)     # Results visualization
# Read the gene list
gene_list <- read.table("D:/R/gene_list.txt", header = FALSE, stringsAsFactors = FALSE)
genes <- gene_list$V1

# Convert gene Symbol to ENTREZ ID
entrez_ids <- bitr(genes, fromType = "SYMBOL", toType = "ENTREZID", OrgDb = org.Hs.eg.db)

# Check if the conversion is successful
print(entrez_ids)
ego <- enrichGO(gene = entrez_ids$ENTREZID,
                OrgDb = org.Hs.eg.db,
                keyType = "ENTREZID",
                ont = "BP",   # "BP"（Biological processes）, "CC"（Cell components）, "MF"（Molecular Function）
                pAdjustMethod = "BH",
                pvalueCutoff = 0.05,
                qvalueCutoff = 0.2)

# Output enrichment analysis results
write.table(ego@result, file = "D:/R/GO_enrichment_results.txt", sep = "\t", quote = FALSE, row.names = FALSE)
# GO barplot
png("D:/R/GO_barplot.png", width = 1200, height = 800)
barplot(ego, showCategory = 10, title = "GO Biological Process Enrichment") +
  theme(
    axis.title = element_text(size = 18),
    axis.text.x = element_text(size = 14),
    axis.text.y = element_text(size = 26),
    plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
    legend.position = c(0.95, 0.05),  # Lower right corner
    legend.justification = c("right", "bottom"),
    legend.text = element_text(size = 14),  # Zoom in the legend font
    legend.title = element_text(size = 14, face = "bold"),
    legend.background = element_rect(fill = "white", color = NA)
  )
dev.off()

# GO dotplot
png("D:/R/GO_dotplot.png", width = 1200, height = 800)
dotplot(ego, showCategory = 10, title = "GO Biological Process Enrichment") +
  theme(
    axis.title = element_text(size = 18),
    axis.text.x = element_text(size = 14),
    axis.text.y = element_text(size = 26),
    plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
    legend.position = c(0.95, 0.05),  # Lower right corner
    legend.justification = c("right", "bottom"),
    legend.text = element_text(size = 14),  # Zoom in the legend font
    legend.title = element_text(size = 14, face = "bold"),
    legend.background = element_rect(fill = "white", color = NA)
  )
dev.off()


#############################################################KEGG enrichment##############################################
# Load the required R package
library(clusterProfiler)
library(org.Hs.eg.db)   # Human Gene Annotation Database
library(enrichplot)     # Results visualization

# Reread the gene list
gene_list <- read.table("D:/R/gene_list.txt", header = FALSE, stringsAsFactors = FALSE)
genes <- gene_list$V1  # Extract gene name
# Gene Symbol to ENTREZ ID
entrez_ids <- bitr(genes, fromType = "SYMBOL", toType = "ENTREZID", OrgDb = org.Hs.eg.db)

# Check the converted ID
print(entrez_ids)
ekegg <- enrichKEGG(gene = entrez_ids$ENTREZID, 
                    organism = 'hsa',   
                    pAdjustMethod = "BH",
                    pvalueCutoff = 0.1,   # Relax threshold
                    qvalueCutoff = 0.2)   # Make sure there are more pathways to enter the analysis
# Set the number of display channels, up to 50 displays
num_categories <- min(50, nrow(ekegg@result))  

# KEGG barplot
png("D:/R/KEGG_barplot.png", width = 1200, height = 800)
barplot(ekegg, showCategory = num_categories, title = "KEGG Pathway Enrichment") +
  theme(
    axis.title = element_text(size = 18),
    axis.text.x = element_text(size = 14),
    axis.text.y = element_text(size = 26),
    plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
    legend.position = c(0.95, 0.05),  # Lower right corner
    legend.justification = c("right", "bottom"),
    legend.text = element_text(size = 14),
    legend.title = element_text(size = 14, face = "bold"),
    legend.background = element_rect(fill = "white", color = NA)
  )
dev.off()

# KEGG dotplot
png("D:/R/KEGG_dotplot.png", width = 1200, height = 800)
dotplot(ekegg, showCategory = num_categories, title = "KEGG Pathway Enrichment") +
  theme(
    axis.title = element_text(size = 18),
    axis.text.x = element_text(size = 14),
    axis.text.y = element_text(size = 26),
    plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
    legend.position = c(0.95, 0.05),  # Lower right corner
    legend.justification = c("right", "bottom"),
    legend.text = element_text(size = 14),
    legend.title = element_text(size = 14, face = "bold"),
    legend.background = element_rect(fill = "white", color = NA)
  )
dev.off()


