# Load the required R package
library(survival)
library(survminer)
library(dplyr)

# Read survival data
survival_data <- read.csv("D:/R/gastric_survival/gastric_cancer_survial.csv", sep = ",", stringsAsFactors = FALSE)

# Read HED distance data
hed_data <- read.csv("D:/R/gastric_survival/combined_divergence.csv", sep = ",", stringsAsFactors = FALSE)

# Replace null values ​​and 0 with 0, and then calculate the average HED value for each individual
hed_data[is.na(hed_data)] <- 0  # Replace null value with 0
hed_data$avg_HED <- rowMeans(hed_data[, -1], na.rm = TRUE)  # Calculate the average HED for each individual

# Extract eid and calculated average HED values
hed_avg_data <- hed_data[, c("eid", "avg_HED")]

# Replace "YSU_N" with "YSU_T" to match the eid in the survival data
hed_avg_data$eid <- gsub("^YSU_N", "YSU_T", hed_avg_data$eid)

# Combined survival data and HED average data
merged_data <- merge(survival_data, hed_avg_data, by = "eid", all.x = TRUE)

# Calculate the 75% quantile of HED
quantile_75 <- quantile(merged_data$avg_HED, 0.75, na.rm = TRUE)

# Create HED grouping variables (less than 75% quantile = 0, greater than or equal to 75% quantile = 1)
merged_data$HED_group <- ifelse(merged_data$avg_HED < quantile_75, 0, 1)

# Ensure the data format is correct
merged_data$status <- as.numeric(merged_data$status)  # Status of survival (1 = death)
merged_data$sex <- as.factor(merged_data$sex)         # Gender is set as factor variable

# Building Survival Objects (Surv)
surv_object <- Surv(time = merged_data$survival_days, event = merged_data$status)

# Perform Cox regression to correct age and gender
cox_model <- coxph(surv_object ~ HED_group + sex + age, data = merged_data)

# Output Cox regression results
cox_summary <- summary(cox_model)
print(cox_summary)

# Specify the output directory
output_dir <- "D:/R/gastric_survival/result/HED"
if (!dir.exists(output_dir)) {
  dir.create(output_dir, recursive = TRUE)
}

# Save Cox regression results to CSV
cox_result <- data.frame(
  Variable = rownames(cox_summary$coefficients),
  HR = cox_summary$coefficients[, "exp(coef)"],  # Hazard Ratio
  Lower_95_CI = cox_summary$conf.int[, "lower .95"],  # 95% Lower confidence interval limit
  Upper_95_CI = cox_summary$conf.int[, "upper .95"],  # 95% Upper confidence interval limit
  P_Value = cox_summary$coefficients[, "Pr(>|z|)"]  # P value
)

write.csv(cox_result, file = file.path(output_dir, "cox_regression_results.csv"), row.names = FALSE)

# Carry out Kaplan-Meier survival analysis
km_fit <- survfit(surv_object ~ HED_group, data = merged_data)

# Draw Kaplan-Meier survival curves
km_plot <- ggsurvplot(km_fit, data = merged_data, pval = TRUE, conf.int = TRUE,
                      risk.table = TRUE, legend.labs = c("Low HED", "High HED"),
                      legend.title = "HED Group", xlab = "Survival Days", ylab = "Survival Probability",
                      ggtheme = theme_bw(),  # Set background to white
                      risk.table.height = 0.25,  # Adjust the risk table height
                      risk.table.y.text = FALSE,  # Hide risk table Y-axis label
                      palette = c("#0072B5", "#E18727"),  # Set color
                      surv.median.line = "hv")  # Add median survival line

# Further beautify: Adjust the theme to make the background clearer
km_plot$plot <- km_plot$plot + 
  theme(
    panel.grid.major = element_blank(),  # Remove the large grid lines
    panel.grid.minor = element_blank(),  # Remove small grid lines
    panel.background = element_blank(),  # Set as transparent background
    plot.title = element_text(size = 14, face = "bold"),  # Thick title
    axis.text = element_text(size = 12),  # Axis Font Size
    axis.title = element_text(size = 13, face = "bold"),  # Axis title thickened
    legend.text = element_text(size = 12),  # Legend Font Size
    legend.title = element_text(size = 13, face = "bold")  # Legend title bold
  )

# Save the KM survival curve to PNG file
ggsave(filename = file.path(output_dir, "KM_curve.png"), plot = km_plot$plot, width = 8, height = 6, dpi = 300)

# Prompt the user's file has been saved
cat("Cox The regression result has been saved to:", file.path(output_dir, "cox_regression_results.csv"), "\n")
cat("Kaplan-Meier Survival curve saved to:", file.path(output_dir, "KM_curve.png"), "\n")
